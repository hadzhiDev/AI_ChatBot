version: '3.8'

services:

  postgres:
    image: postgres:15.3-alpine3.18
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PGDATA: /var/lib/postgresql/data
    volumes:
      - pgdata:/var/lib/postgresql/data
    restart: always
    networks:
      - app
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5

  adminer:
    image: adminer
    depends_on:
      - postgres
    ports:
      - "${ADMINER_PORT}:8080"
    env_file:
      - .env
    restart: always
    networks:
      - app

  main:
    build:
      context: .
    env_file:
      - .env
    command: >
      sh -c "
      until pg_isready -h postgres -U ${POSTGRES_USER} -d ${POSTGRES_DB}; do sleep 1; done &&
      python3 manage.py migrate &&
      python3 manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/app:delegated
    ports:
      - "${PORT}:8000"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app
    restart: always

networks:
  app:

volumes:
  pgdata: